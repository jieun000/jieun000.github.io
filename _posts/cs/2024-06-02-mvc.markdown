---
layout: post
title: MVC 패턴
image: 202406/design.jpg
date: 2024-06-02 12:00:00 +1000
categories: cs
tags: [디자인 패턴, Design Pattern, MVC 패턴, View, Controller, Model]
toc: true
code: true
---
<style>
summary:hover { cursor: pointer; }
</style>

## MVC 패턴이란?
MVC 패턴은 **Model-View-Controller의 약자**로, 소프트웨어 개발에서 <mark>애플리케이션의 구조를 체계적으로 분리하여</mark> 더 효율적으로 개발하고 유지보수할 수 있게 하는 디자인 패턴 중 하나입니다.

<details>
  <summary>세 가지 주요 컴포넌트 Model, View, Controller는 상호 연결되는 개념입니다.</summary>
    1. 사용자가 웹 애플리케이션에서 버튼<i>View</i>을 클릭 → <br>
    2. 이 클릭 이벤트가 <i>Controller</i>로 전달 → <br>
    3. Controller가 해당 이벤트를 처리하고 필요한 경우 <i>Model</i>을 업데이트 → <br>
    4. Model이 변경된 데이터를 <i>View</i>에 전달 → <br>
    5. View가 변경된 데이터를 사용하여 사용자에게 업데이트된 인터페이스를 표시
</details>

<br>

### View(뷰)
<u>사용자 인터페이스</u>를 담당해 데이터의 시각적 표현을 합니다. 

- 모델로부터 데이터를 받아 사용자에게 표시합니다.
- 사용자의 입력을 받아 Controller에 전달합니다.


### Controller(컨트롤러)
사용자의 입력을 처리하고, 그 입력을 기반으로 <u>모델을 업데이트하거나 변경된 모델을 뷰에 반영</u>하는 역할을 합니다.

- 모델과 뷰 사이의 중재자 역할을 합니다.
- 비즈니스 로직을 처리하고 그 결과를 모델에 반영합니다.


### Model(모델)
<u>애플리케이션의 데이터와 비즈니스 로직</u>을 담당합니다.

- 데이터베이스와 상호작용해 데이터를 가져오거나 저장하는 역할을 합니다.
- 애플리케이션의 상태를 관리합니다.
- 데이터 변경 시 View에 알려주는 역할을 하기도 합니다.