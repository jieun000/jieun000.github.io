---
layout: post
title: Spring과 Spring Boot
image: 202404/spring.jpeg
date: 2024-04-10 12:00:00 +1000
tags: [spring, 스프링, spring_Boot, 스프링부트]
categories: spring
toc: true
---
## Spring
스프링(Spring)은 **자바 기반의 오픈 소스 프레임워크**입니다.
이 프레임워크는 <u>다양한 기능과 모듈을 제공</u>하여 웹 애플리케이션, RESTful 서비스, 일반적인 Java 애플리케이션 등을 구축할 수 있습니다. 개발자는 엔터프라이즈급 애플리케이션을 보다 효율적으로 개발할 수 있게 됩니다.

> Spring의 핵심 원칙

1. 경량성(Lightweight)
Spring은 컨테이너와 모듈의 모음으로 구성되어 있으며, 필요한 기능만 선택하여 사용할 수 있습니다. 
이를 통해 애플리케이션의 무게를 줄이고 개발자가 유연하게 기능을 확장할 수 있습니다.

2. 의존성 주입(Dependency Injection, DI)
Spring은 의존성 주입을 통해 객체 간의 결합도를 줄입니다. 
이는 유지보수가 쉽고 테스트하기 쉬운 코드를 작성할 수 있도록 도와줍니다.

3. 관점 지향 프로그래밍(Aspect-Oriented Programming, AOP)
Spring은 AOP를 지원하여 핵심 비즈니스 로직과 횡단 관심 사항(예: 로깅, 트랜잭션 관리 등)을 분리할 수 있습니다.

4. 트랜잭션 관리
Spring은 선언적 트랜잭션 관리를 제공하여 데이터베이스 트랜잭션을 보다 쉽게 처리할 수 있습니다.

5. 모듈성
Spring은 여러 모듈로 구성되어 있으며, 필요한 기능을 선택하여 사용할 수 있습니다. 
{예: Spring MVC(웹 애플리케이션을 개발하기 위한 모듈), Spring JDBC(데이터베이스와 상호 작용하기 위한 모듈)}

6. 통합
Spring은 다양한 기술과 프레임워크를 통합할 수 있는 방법을 제공합니다. 
예를 들어, Spring은 JPA, Hibernate, MyBatis 등과 함께 사용될 수 있습니다.

---

## Spring Boot

스프링 부트(Spring Boot)는 Spring 프레임워크를 기반으로 한 독립적으로 실행 가능한 애플리케이션을 빠르고 쉽게 개발할 수 있도록 도와주는 도구입니다.

> Spring boot의 특징

1. 간편한 설정
Spring Boot는 <u>자동 구성 기능</u>을 제공하여 개발자가 추가 설정을 최소화하고 더 빠르게 애플리케이션을 시작할 수 있습니다. 일반적인 설정은 자동으로 감지되어 애플리케이션의 기본 구성을 제공합니다.

2. 내장 서버
Spring Boot는 내장된 Tomcat, Jetty, Undertow와 같은 서버를 제공하여 애플리케이션을 실행할 수 있습니다. 
이는 애플리케이션을 독립적으로 실행할 수 있게 해주며, 외부 서버 설정이 필요 없습니다.

3. 의존성 자동 관리
Spring Boot는 스프링 프레임워크와 관련된 의존성을 자동으로 관리합니다. 
개발자가 필요한 라이브러리를 명시적으로 추가할 필요 없이 필요한 의존성을 자동으로 가져옵니다.

4. 시작 속도 및 성능
Spring Boot는 <u>내장 서버와 자동 구성 기능</u>을 통해 애플리케이션의 시작 속도를 향상시키고 성능을 최적화합니다. 
이는 개발자가 빠르게 프로토타입을 개발하고 실행할 수 있도록 도와줍니다.

5. 모니터링 및 관리 기능
Spring Boot는 Actuator 모듈을 통해 애플리케이션의 상태를 모니터링하고 관리할 수 있는 기능을 제공합니다. 
이를 통해 애플리케이션의 운영 상태를 실시간으로 확인하고 문제를 해결할 수 있습니다.